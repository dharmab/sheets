---
- name: install ansible postgresql dependencies
  yum: name=python-psycopg2
  sudo: yes

- name: create application directory
  file: path=/opt/sheets state=directory owner=root group=root
  sudo: yes

- name: install tomcat
  yum: name={{ item }}
  with_items:
    - tomcat
    - apache-commons-dbcp
  sudo: yes

- name: copy tomcat server configuration
  copy: src=server.xml dest=/usr/share/tomcat/conf/server.xml owner=tomcat group=tomcat
  sudo: yes
  notify: restart tomcat

- name: copy insecure SSL key
  copy: src=keystore dest=/etc/tomcat/keystore owner=tomcat group=tomcat
  sudo: yes
  notify: restart tomcat

- name: set tomcat root appliqcation
  copy: src=ROOT.xml dest=/usr/share/tomcat/conf/Catalina/localhost/ROOT.xml owner=tomcat group=tomcat
  sudo: yes
  notify: restart tomcat

- name: enable tomcat
  service: name=tomcat state=started enabled=yes
  sudo: yes

- name: install postgresql
  yum: name=postgresql-server
  sudo: yes
  register: postgresql_installation

- name: download postgresql jdbc driver
  get_url: url=http://jdbc.postgresql.org/download/postgresql-9.3-1102.jdbc41.jar dest=/usr/share/tomcat/lib/ owner=root group=root
  sudo: yes
  notify: restart tomcat

- name: initialize postgresql
  command: /usr/bin/postgresql-setup initdb
  when: postgresql_installation|changed
  sudo: yes

- name: configure postgresql access
  copy: src=pg_hba.conf dest=/var/lib/pgsql/data/pg_hba.conf
  sudo: yes
  sudo_user: postgres
  register: postgresql_access

- name: configure postgresql listening addresses
  lineinfile: dest=/var/lib/pgsql/data/postgresql.conf regexp='^listen_addresses*' line="listen_addresses = '*'"
  sudo: yes
  sudo_user: postgres

- name: restart postgresql
  service: name=postgresql state=restarted
  when: postgresql_installation|changed or postgresql_access|changed
  sudo: yes

- name: enable postgresql
  service: name=postgresql state=started enabled=yes
  sudo: yes

- name: create postgresql user
  postgresql_user: name=sheets password=sheets encrypted=no
  sudo: yes
  sudo_user: postgres

- name: create postgresql database
  postgresql_db: name=sheets owner=sheets
  sudo: yes
  sudo_user: postgres

- name: redirect HTTP/HTTPS to tomcat
  firewalld: rich_rule='rule family="ipv4" forward-port port="{{ item.src }}" protocol="tcp" to-port="{{ item.dest }}"' permanent=true state=enabled
  with_items:
    - { src: 80, dest: 8080 }
    - { src: 443, dest: 8443 }
  sudo: yes
  notify: reload firewall
  register: firewalld_redirect

- name: open firewall ports
  firewalld: port={{ item }} permanent=true state=enabled
  with_items:
    - 80/tcp
    - 443/tcp
    - 5432/tcp
  sudo: yes
  notify: reload firewall
  register: firewalld_open_ports

# While the firewall reload should apply the firewalld rules, in the dev VM the reload fails for some reason.
# workaround: restart the daemon
- name: restart firewall
  service: name=firewalld state=restarted
  when: firewalld_redirect|changed or firewalld_open_ports|changed
  sudo: yes
